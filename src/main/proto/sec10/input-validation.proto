syntax = "proto3";

package sec10;

option java_multiple_files = true;
option java_package = "com.altuhin.models.sec10";

// Input validation and error handling

message BalanceCheckRequest {
  int32 account_number = 1;
}

message AccountBalance {
  int32 account_number = 1;
  int32 balance = 2;
}

message WithdrawRequest {
  int32 account_number = 1;
  int32 amount = 2;
}

message Money {
  int32 amount = 1;
}

// How to show Application Specific Error messages to the Client in a Type safe manner
enum ValidationCode {
  INVALID_ACCOUNT = 0;
  INVALID_AMOUNT = 1;
  INSUFFICIENT_BALANCE = 2;
}
message ErrorMessage {
    ValidationCode validation_code = 1;
}


service BankService {
  /**
   Unary
  - account number should be between 1 to 10;
   */

  rpc GetAccountBalance(BalanceCheckRequest) returns (AccountBalance);

  /**
  Server Streaming
  (These are the some validation)
  - account number should be between 1 to 10
  - amount should be 10 multiplies
  - account should have enough balance
   */
  rpc Withdraw(WithdrawRequest) returns (stream Money);

}